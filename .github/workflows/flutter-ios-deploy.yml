name: Flutter iOS Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Allows manual trigger

jobs:
  build-and-deploy:
    runs-on: macos-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
    
    - name: Flutter Doctor
      run: flutter doctor -v
    
    - name: Get Flutter Dependencies
      run: flutter pub get
    
    - name: Cache CocoaPods
      uses: actions/cache@v3
      with:
        path: ios/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-
    
    - name: Install CocoaPods
      run: |
        cd ios
        sudo gem install cocoapods
        pod install
    
    - name: Create certificates directory
      run: mkdir -p ~/certs
    
    - name: Import App Store Connect API Key
      run: |
        echo "${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}" | base64 --decode > ~/certs/AuthKey.p8
    
    - name: Import Distribution Certificate
      run: |
        echo "${{ secrets.IOS_DISTRIBUTION_CERTIFICATE_BASE64 }}" | base64 --decode > ~/certs/distribution.p12
        security create-keychain -p github-actions build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p github-actions build.keychain
        security import ~/certs/distribution.p12 -k build.keychain -P "${{ secrets.IOS_DISTRIBUTION_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k github-actions build.keychain
    
    - name: Import Provisioning Profile
      run: |
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        echo "${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/ilolo_AppStore.mobileprovision
    
    - name: Debug TEAM_ID
      run: |
        if [ -z "${{ secrets.TEAM_ID }}" ]; then
          echo "❌ TEAM_ID secret is missing"
          exit 1
        else
          echo "✅ TEAM_ID secret is set"
        fi
    
    - name: Build Flutter iOS (Release)
      run: |
        flutter build ios --release --no-codesign --suppress-analytics || true
        
    - name: Build Archive with Xcode (Ignore Warnings)
      run: |
        cd ios
        xcodebuild clean archive \
          -workspace Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -archivePath build/Runner.xcarchive \
          CODE_SIGN_STYLE=Manual \
          DEVELOPMENT_TEAM=${{ secrets.TEAM_ID }} \
          CODE_SIGN_IDENTITY="Apple Distribution" \
          PROVISIONING_PROFILE_SPECIFIER="ilolo_AppStore" \
          GCC_TREAT_WARNINGS_AS_ERRORS=NO \
          SWIFT_TREAT_WARNINGS_AS_ERRORS=NO \
          IPHONEOS_DEPLOYMENT_TARGET=13.0 \
          -destination 'generic/platform=iOS'
    
    - name: Export IPA
      run: |
        cd ios
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>method</key>
          <string>app-store</string>
          <key>teamID</key>
          <string>${{ secrets.TEAM_ID }}</string>
          <key>uploadSymbols</key>
          <true/>
          <key>uploadBitcode</key>
          <false/>
          <key>provisioningProfiles</key>
          <dict>
            <key>com.ilolo.app</key>
            <string>ilolo_AppStore</string>
          </dict>
        </dict>
        </plist>
        EOF
        
        xcodebuild -exportArchive \
          -archivePath build/Runner.xcarchive \
          -exportPath build/ \
          -exportOptionsPlist ExportOptions.plist
    
    - name: Upload to App Store Connect
      run: |
        cd ios
        xcrun iTMSTransporter -m upload \
          -assetFile "build/Runner.ipa" \
          -apiKey "${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}" \
          -apiIssuer "${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}" \
          -v informational
